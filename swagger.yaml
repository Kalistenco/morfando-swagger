openapi: 3.0.3
info:
  title: Morfando API
  description: Especificación de la API de morfando app
  version: 1.0.0
tags:
  - name: user
    description: Operaciones con usuarios
  - name: restaurant
    description: Operaciones con restaurantes
paths:

  /user/owner:
    post:
      tags:
        - user
      summary: Creación de usuario de tipo dueño
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Owner'
      responses:
        '200':
          description: OK
        '400':
          description: User already exists

  /user/customer:
    post:
      tags:
        - user
      summary: Creación de usuario de tipo cliente
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: OK
        '400':
          description: User already exists

  /user/owner/login:
    post:
      tags:
        - user
      summary: Logeo de usuario de tipo dueño
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Owner'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid username/password supplied

  /user/owner/recover/code:
    post:
      tags:
        - user
      summary: Código de recuperación de usuario de tipo dueño
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerCode'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid username supplied or code

  /user/owner/recover/password:
    post:
      tags:
        - user
      summary: Creación de nueva contraseña para usuario de tipo dueño
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerRecover'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid username supplied

  /user/customer/login:
    post:
      tags:
        - user
      summary: Logeo de usuario de tipo cliente
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid username supplied

  /user/customer/{email}:
    put:
      tags:
        - user
      summary: Actualización de datos de un cliente
      description: .
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: .
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerComplete'
      responses:
        '200':
          description: OK
        '404':
          description: User with specified email does not exist
    delete:
      tags:
        - user
      summary: Eliminación de usuario
      description: .
      parameters:
        - name: email
          in: path
          description: .
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: User with specified email does not exist

  /restaurant:
    post:
      summary: Creación de un restaurant
      operationId: post-restaurant
      responses:
        '200':
          description: OK
      parameters:
        - schema:
            type: string
          in: header
          name: Authentication
          required: true
          description: authentication token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/xml:
            schema:
              type: object
              properties: { }
        description: ''
      description: ''
      tags:
        - restaurant
    parameters: [ ]

    get:
      summary: Encontrar restaurantes de acuerdo al tipo de usuario logeado
      operationId: get-restaurant
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurants'
          description: OK
        '404':
          description: No se encontraron restaurantes
      tags:
        - restaurant
      parameters:
        - schema:
            type: string
          in: header
          name: authentication
          required: true
          description: authentication token
      description: |-
        owner: encuentra sus restaurantes;
        user: encuentra los restaurantes más cercanos a su ubicación

  /restaurant/filter:
    get:
      summary: Encontrar restaurantes de acuerdo a filtros
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurants'
          description: OK
        '404':
          description: No se encontraron restaurantes
      tags:
        - restaurant
      parameters:
        - schema:
            type: string
          in: header
          name: authentication
          required: true
          description: authentication token
        - in: query
          name: name
          schema:
            type: string
          description: Nombre del restaurant
        - in: query
          name: distance
          schema:
            type: string
          description: Distancia máxima del restaurant hacia la ubicación del usuario
        - in: query
          name: nameCategory
          schema:
            type: string
          description: Categoría perteneciente al retaurant
        - in: query
          name: priceRange
          schema:
            type: string
          description: Rango de precio del restaurant
        - schema:
            type: string
          in: query
          name: stars
          description: Cantidad de estrellas del restaurant

  /restaurant/{id}:
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
      put:
        summary: Actualización de un restaurante
        operationId: put-restaurant-id
        responses:
          '200':
            description: OK
          '404':
            description: No se encontraró el restaurante especificado
        description: ''
        parameters:
          - schema:
              type: string
            in: header
            name: Authentication
            required: true
            description: authentication token
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  restaurant:
                    $ref: '#/components/schemas/Restaurant'
        tags:
          - restaurant

  /favorite:
    get:
      summary: Encontrar restaurantes favoritos del cliente
      tags:
        - restaurant
      parameters:
        - schema:
            type: string
          in: header
          name: authentication
          required: true
          description: authentication token
      responses:
        '200':
          description: OK
      operationId: get-favorite-idCliente
    parameters: []

  /favorite/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        in: header
        name: authentication
        required: true
        description: authentication token

    post:
      summary: Agrega un restaurante a favoritos
      tags:
        - restaurant
      operationId: post-favorite
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurants'
          description: OK
        '404':
          description: No se encontraron restaurantes
    delete:
      summary: Elimina un restaurante de favoritos
      tags:
        - restaurant
      operationId: delete-favorite-id
      responses:
        '200':
          description: OK
        '404':
          description: No se encontraró el restaurant
      description: ''


  /review:
    post:
      summary: Crear review de un restaurant
      tags:
        - restaurant
      operationId: post-review
      parameters:
        - schema:
            type: string
          in: header
          name: authentication
          description: authentication token
      responses:
        '200':
          description: OK
        '404':
          description: No se encontraró el restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/review'
      description: agrega un review a un restaurant

components:
  schemas:
    Owner:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'

    OwnerRecover:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        oldPassword:
          type: string
          example: '12345'
        newPassword:
          type: string
          example: '544543'

    OwnerCode:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        code:
          type: string
          example: 12345

    Customer:
      type: object
      properties:
        email:
          type: string
          example: john@email.com

    CustomerComplete:
      type: object
      properties:
        name:
          type: string
          example: john
        lastName:
          type: string
          example: jackson
        profilePhoto:
          type: object
          items:
            $ref: '#/components/schemas/Image'

    Restaurants:
      type: array
      items:
        $ref: '#/components/schemas/Restaurant'


    Restaurant:
      title: Restaurant
      x-stoplight:
        id: oeedhzfztsnah
      type: object
      example:
          id: '123'
          name: Boyaca bistro
          geolocation:
            latitude: '-34.6019653'
            longitud: '-58.3757935'
          hours:
            - day: Lunes
              opening: '8:00'
              closing: '20:00'
            - day: Martes
              opening: '8:00'
              closing: '20:00'
            - day: Miercoles
              opening: '9:00'
              closing: '21:00'
            - day: Jueves
              opening: '9:00'
              closing: '21:00'
            - day: Viernes
              opening: '12:00'
              closing: '00:00'
          address:
            street: lavalle
            number: '477'
            province: CABA
            country: Argentina
          temporarilyClosed: false
          images:
            path: boyacaBistroRestaurant
            type: jpg
          specialization:
            - Comida vegana
            - Comida vegetariana
          menu:
            idRestaurant: '123'
            categories:
              - name: Postres
                items:
                  - name: Bizcocho de almendras
                    price: 200
                    images:
                      - path: biscochoDeAlmendra
                        type: svg
                    ingredients:
                      - yogur vegetal de almendra
                      - harina integral
                      - azúcar panela
                      - mermelada de naranja
                    suitableVegan: true
                    suitableForCeliac: true
                  - name: Bao de coco
                    price: 1200
                    images:
                      - path: BaoDeCoco
                        type: svg
                    ingredients:
                      - bao frito
                      - crema pastelera de coco
                      - praliné de maní
                    suitableVegan: true
                    suitableForCeliac: true
          priceRange: BAJO
      description: ''
      properties:
        id:
          type: string
        name:
          type: string
        geolocation:
          type: object
          properties:
            latitude:
              type: string
            longitud:
              type: string
        Horario:
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
        address:
          type: object
          properties:
            street:
              type: string
            number:
              type: string
            barrio:
              type: string
            location:
              type: string
            province:
              type: string
            country:
              type: string
        temporarilyClosed:
          type: boolean
        images:
          type: object
          properties:
            path:
              type: string
            type:
              type: string
        specialization:
          type: array
          items:
            type: string
        menu:
          $ref: '#/components/schemas/Menu'
        owner:
          $ref: '#/components/schemas/Owner'
        priceRange:
          anyOf:
            - properties: { }
              enum:
                - BAJO
                - MEDIO
                - ALTO
                - MUY_ALTO
          type: string

    Menu:
      title: Menu
      x-stoplight:
        id: jtpvf4w17zig8
      type: object
      properties:
        idRestaurant:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'

    Schedule:
      title: Schedule
      x-stoplight:
        id: 8n9v77ljl3ou0
      type: object
      properties:
        day:
          type: string
        opening:
          type: string
        closing:
          type: string

    Item_categoria:
      title: Items_categoria
      x-stoplight:
        id: 3hsjqm6x9500d
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        ingredientes:
          type: array
          items:
            type: string
        suitableVegan:
          type: boolean
        suitableForCeliac:
          type: boolean

    Image:
      title: Image
      x-stoplight:
        id: 1tij98ctc3a81
      type: object
      properties:
        path:
          type: string
        type:
          type: string

    Category:
      title: Category
      x-stoplight:
        id: fhraoyfnq9bgi
      type: object
      properties:
        name:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item_categoria'
      x-examples:
        example-1:
          name: string
          items:
            - name: string
              price: 0
              images:
                - path: string
                  type: string
              ingredientes:
                - string
              suitableVegan: true
              suitableForCeliac: true

    review:
      title: review
      x-stoplight:
        id: 5tre7jyhnsgf7
      type: object
      properties:
        id:
          type: string
        comment:
          type: string
        numberOfStars:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        idRestaurant:
          type: string
      example:
        comment: Muy buena la comida
        numberO: 5
        idRestaurant: '123'
